<?php

namespace Proxies\__CG__\App\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Propriete extends \App\Entity\Propriete implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Propriete' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Propriete' . "\0" . 'nom', '' . "\0" . 'App\\Entity\\Propriete' . "\0" . 'prenom', '' . "\0" . 'App\\Entity\\Propriete' . "\0" . 'telephone', '' . "\0" . 'App\\Entity\\Propriete' . "\0" . 'adresse', '' . "\0" . 'App\\Entity\\Propriete' . "\0" . 'impotTOMs', '' . "\0" . 'App\\Entity\\Propriete' . "\0" . 'impotCFPBs', '' . "\0" . 'App\\Entity\\Propriete' . "\0" . 'impotCFNPBs', '' . "\0" . 'App\\Entity\\Propriete' . "\0" . 'taxIndirectes', '' . "\0" . 'App\\Entity\\Propriete' . "\0" . 'recettes', '' . "\0" . 'App\\Entity\\Propriete' . "\0" . 'ristournes', '' . "\0" . 'App\\Entity\\Propriete' . "\0" . 'excedents', '' . "\0" . 'App\\Entity\\Propriete' . "\0" . 'patentes', '' . "\0" . 'App\\Entity\\Propriete' . "\0" . 'taxeRurales', '' . "\0" . 'App\\Entity\\Propriete' . "\0" . 'impotMiniFiscals'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Propriete' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Propriete' . "\0" . 'nom', '' . "\0" . 'App\\Entity\\Propriete' . "\0" . 'prenom', '' . "\0" . 'App\\Entity\\Propriete' . "\0" . 'telephone', '' . "\0" . 'App\\Entity\\Propriete' . "\0" . 'adresse', '' . "\0" . 'App\\Entity\\Propriete' . "\0" . 'impotTOMs', '' . "\0" . 'App\\Entity\\Propriete' . "\0" . 'impotCFPBs', '' . "\0" . 'App\\Entity\\Propriete' . "\0" . 'impotCFNPBs', '' . "\0" . 'App\\Entity\\Propriete' . "\0" . 'taxIndirectes', '' . "\0" . 'App\\Entity\\Propriete' . "\0" . 'recettes', '' . "\0" . 'App\\Entity\\Propriete' . "\0" . 'ristournes', '' . "\0" . 'App\\Entity\\Propriete' . "\0" . 'excedents', '' . "\0" . 'App\\Entity\\Propriete' . "\0" . 'patentes', '' . "\0" . 'App\\Entity\\Propriete' . "\0" . 'taxeRurales', '' . "\0" . 'App\\Entity\\Propriete' . "\0" . 'impotMiniFiscals'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Propriete $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getNom(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNom', []);

        return parent::getNom();
    }

    /**
     * {@inheritDoc}
     */
    public function setNom(string $nom): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNom', [$nom]);

        return parent::setNom($nom);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrenom(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrenom', []);

        return parent::getPrenom();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrenom(string $prenom): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrenom', [$prenom]);

        return parent::setPrenom($prenom);
    }

    /**
     * {@inheritDoc}
     */
    public function getTelephone(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTelephone', []);

        return parent::getTelephone();
    }

    /**
     * {@inheritDoc}
     */
    public function setTelephone(string $telephone): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTelephone', [$telephone]);

        return parent::setTelephone($telephone);
    }

    /**
     * {@inheritDoc}
     */
    public function getAdresse(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdresse', []);

        return parent::getAdresse();
    }

    /**
     * {@inheritDoc}
     */
    public function setAdresse(string $adresse): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAdresse', [$adresse]);

        return parent::setAdresse($adresse);
    }

    /**
     * {@inheritDoc}
     */
    public function getImpotTOMs(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImpotTOMs', []);

        return parent::getImpotTOMs();
    }

    /**
     * {@inheritDoc}
     */
    public function addImpotTOM(\App\Entity\ImpotTOM $impotTOM): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addImpotTOM', [$impotTOM]);

        return parent::addImpotTOM($impotTOM);
    }

    /**
     * {@inheritDoc}
     */
    public function removeImpotTOM(\App\Entity\ImpotTOM $impotTOM): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeImpotTOM', [$impotTOM]);

        return parent::removeImpotTOM($impotTOM);
    }

    /**
     * {@inheritDoc}
     */
    public function getImpotCFPBs(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImpotCFPBs', []);

        return parent::getImpotCFPBs();
    }

    /**
     * {@inheritDoc}
     */
    public function addImpotCFPB(\App\Entity\ImpotCFPB $impotCFPB): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addImpotCFPB', [$impotCFPB]);

        return parent::addImpotCFPB($impotCFPB);
    }

    /**
     * {@inheritDoc}
     */
    public function removeImpotCFPB(\App\Entity\ImpotCFPB $impotCFPB): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeImpotCFPB', [$impotCFPB]);

        return parent::removeImpotCFPB($impotCFPB);
    }

    /**
     * {@inheritDoc}
     */
    public function getImpotCFNPBs(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImpotCFNPBs', []);

        return parent::getImpotCFNPBs();
    }

    /**
     * {@inheritDoc}
     */
    public function addImpotCFNPB(\App\Entity\ImpotCFNPB $impotCFNPB): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addImpotCFNPB', [$impotCFNPB]);

        return parent::addImpotCFNPB($impotCFNPB);
    }

    /**
     * {@inheritDoc}
     */
    public function removeImpotCFNPB(\App\Entity\ImpotCFNPB $impotCFNPB): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeImpotCFNPB', [$impotCFNPB]);

        return parent::removeImpotCFNPB($impotCFNPB);
    }

    /**
     * {@inheritDoc}
     */
    public function getTaxIndirectes(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTaxIndirectes', []);

        return parent::getTaxIndirectes();
    }

    /**
     * {@inheritDoc}
     */
    public function addTaxIndirecte(\App\Entity\TaxIndirecte $taxIndirecte): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTaxIndirecte', [$taxIndirecte]);

        return parent::addTaxIndirecte($taxIndirecte);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTaxIndirecte(\App\Entity\TaxIndirecte $taxIndirecte): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTaxIndirecte', [$taxIndirecte]);

        return parent::removeTaxIndirecte($taxIndirecte);
    }

    /**
     * {@inheritDoc}
     */
    public function getRecettes(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRecettes', []);

        return parent::getRecettes();
    }

    /**
     * {@inheritDoc}
     */
    public function addRecette(\App\Entity\Recette $recette): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRecette', [$recette]);

        return parent::addRecette($recette);
    }

    /**
     * {@inheritDoc}
     */
    public function removeRecette(\App\Entity\Recette $recette): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeRecette', [$recette]);

        return parent::removeRecette($recette);
    }

    /**
     * {@inheritDoc}
     */
    public function getRistournes(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRistournes', []);

        return parent::getRistournes();
    }

    /**
     * {@inheritDoc}
     */
    public function addRistourne(\App\Entity\Ristournes $ristourne): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRistourne', [$ristourne]);

        return parent::addRistourne($ristourne);
    }

    /**
     * {@inheritDoc}
     */
    public function removeRistourne(\App\Entity\Ristournes $ristourne): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeRistourne', [$ristourne]);

        return parent::removeRistourne($ristourne);
    }

    /**
     * {@inheritDoc}
     */
    public function getExcedents(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExcedents', []);

        return parent::getExcedents();
    }

    /**
     * {@inheritDoc}
     */
    public function addExcedent(\App\Entity\Excedents $excedent): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addExcedent', [$excedent]);

        return parent::addExcedent($excedent);
    }

    /**
     * {@inheritDoc}
     */
    public function removeExcedent(\App\Entity\Excedents $excedent): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeExcedent', [$excedent]);

        return parent::removeExcedent($excedent);
    }

    /**
     * {@inheritDoc}
     */
    public function getPatentes(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPatentes', []);

        return parent::getPatentes();
    }

    /**
     * {@inheritDoc}
     */
    public function addPatente(\App\Entity\Patente $patente): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPatente', [$patente]);

        return parent::addPatente($patente);
    }

    /**
     * {@inheritDoc}
     */
    public function removePatente(\App\Entity\Patente $patente): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePatente', [$patente]);

        return parent::removePatente($patente);
    }

    /**
     * {@inheritDoc}
     */
    public function getTaxeRurales(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTaxeRurales', []);

        return parent::getTaxeRurales();
    }

    /**
     * {@inheritDoc}
     */
    public function addTaxeRurale(\App\Entity\TaxeRurale $taxeRurale): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTaxeRurale', [$taxeRurale]);

        return parent::addTaxeRurale($taxeRurale);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTaxeRurale(\App\Entity\TaxeRurale $taxeRurale): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTaxeRurale', [$taxeRurale]);

        return parent::removeTaxeRurale($taxeRurale);
    }

    /**
     * {@inheritDoc}
     */
    public function getImpotMiniFiscals(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImpotMiniFiscals', []);

        return parent::getImpotMiniFiscals();
    }

    /**
     * {@inheritDoc}
     */
    public function addImpotMiniFiscal(\App\Entity\ImpotMiniFiscal $impotMiniFiscal): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addImpotMiniFiscal', [$impotMiniFiscal]);

        return parent::addImpotMiniFiscal($impotMiniFiscal);
    }

    /**
     * {@inheritDoc}
     */
    public function removeImpotMiniFiscal(\App\Entity\ImpotMiniFiscal $impotMiniFiscal): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeImpotMiniFiscal', [$impotMiniFiscal]);

        return parent::removeImpotMiniFiscal($impotMiniFiscal);
    }

}
